import{S as _t,i as bt,s as zt,k as yt,q as ei,l as xt,m as gt,r as si,h as q,n as ni,b as wt,G as Mt,B as W,w as Dt,a as _i,x as Pt,c as bi,y as Vt,f as Yt,t as Zt,z as Lt}from"../../chunks/index-1664d19c.js";/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const zi="148",ai=0,hi=1,Si=100,Ai=204,Ti=205,Ci=3,wi=300,oi=1e3,It=1001,li=1002,Bi=1006,ki=1008,Ei=1009,Ri=1023,Fi=3e3,Ii=0,$t=7680,Oi=519,ui=35044;class Xt{addEventListener(t,i){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[t]===void 0&&(e[t]=[]),e[t].indexOf(i)===-1&&e[t].push(i)}hasEventListener(t,i){if(this._listeners===void 0)return!1;const e=this._listeners;return e[t]!==void 0&&e[t].indexOf(i)!==-1}removeEventListener(t,i){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const n=s.indexOf(i);n!==-1&&s.splice(n,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const e=this._listeners[t.type];if(e!==void 0){t.target=this;const s=e.slice(0);for(let n=0,a=s.length;n<a;n++)s[n].call(this,t);t.target=null}}}const F=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function St(){const y=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,e=Math.random()*4294967295|0;return(F[y&255]+F[y>>8&255]+F[y>>16&255]+F[y>>24&255]+"-"+F[t&255]+F[t>>8&255]+"-"+F[t>>16&15|64]+F[t>>24&255]+"-"+F[i&63|128]+F[i>>8&255]+"-"+F[i>>16&255]+F[i>>24&255]+F[e&255]+F[e>>8&255]+F[e>>16&255]+F[e>>24&255]).toLowerCase()}function j(y,t,i){return Math.max(t,Math.min(i,y))}function Ot(y,t){switch(t.constructor){case Float32Array:return y;case Uint16Array:return y/65535;case Uint8Array:return y/255;case Int16Array:return Math.max(y/32767,-1);case Int8Array:return Math.max(y/127,-1);default:throw new Error("Invalid component type.")}}function I(y,t){switch(t.constructor){case Float32Array:return y;case Uint16Array:return Math.round(y*65535);case Uint8Array:return Math.round(y*255);case Int16Array:return Math.round(y*32767);case Int8Array:return Math.round(y*127);default:throw new Error("Invalid component type.")}}class D{constructor(t=0,i=0){D.prototype.isVector2=!0,this.x=t,this.y=i}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,i){return this.x=t,this.y=i,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const i=this.x,e=this.y,s=t.elements;return this.x=s[0]*i+s[3]*e+s[6],this.y=s[1]*i+s[4]*e+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,e=this.y-t.y;return i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this}rotateAround(t,i){const e=Math.cos(i),s=Math.sin(i),n=this.x-t.x,a=this.y-t.y;return this.x=n*e-a*s+t.x,this.y=n*s+a*e+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ct{constructor(){ct.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,i,e,s,n,a,r,l,h){const o=this.elements;return o[0]=t,o[1]=s,o[2]=r,o[3]=i,o[4]=n,o[5]=l,o[6]=e,o[7]=a,o[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const i=this.elements,e=t.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],this}extractBasis(t,i,e){return t.setFromMatrix3Column(this,0),i.setFromMatrix3Column(this,1),e.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const i=t.elements;return this.set(i[0],i[4],i[8],i[1],i[5],i[9],i[2],i[6],i[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const e=t.elements,s=i.elements,n=this.elements,a=e[0],r=e[3],l=e[6],h=e[1],o=e[4],u=e[7],c=e[2],d=e[5],m=e[8],p=s[0],g=s[3],x=s[6],w=s[1],T=s[4],z=s[7],_=s[2],S=s[5],M=s[8];return n[0]=a*p+r*w+l*_,n[3]=a*g+r*T+l*S,n[6]=a*x+r*z+l*M,n[1]=h*p+o*w+u*_,n[4]=h*g+o*T+u*S,n[7]=h*x+o*z+u*M,n[2]=c*p+d*w+m*_,n[5]=c*g+d*T+m*S,n[8]=c*x+d*z+m*M,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this}determinant(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],h=t[7],o=t[8];return i*a*o-i*r*h-e*n*o+e*r*l+s*n*h-s*a*l}invert(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],h=t[7],o=t[8],u=o*a-r*h,c=r*l-o*n,d=h*n-a*l,m=i*u+e*c+s*d;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/m;return t[0]=u*p,t[1]=(s*h-o*e)*p,t[2]=(r*e-s*a)*p,t[3]=c*p,t[4]=(o*i-s*l)*p,t[5]=(s*n-r*i)*p,t[6]=d*p,t[7]=(e*l-h*i)*p,t[8]=(a*i-e*n)*p,this}transpose(){let t;const i=this.elements;return t=i[1],i[1]=i[3],i[3]=t,t=i[2],i[2]=i[6],i[6]=t,t=i[5],i[5]=i[7],i[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const i=this.elements;return t[0]=i[0],t[1]=i[3],t[2]=i[6],t[3]=i[1],t[4]=i[4],t[5]=i[7],t[6]=i[2],t[7]=i[5],t[8]=i[8],this}setUvTransform(t,i,e,s,n,a,r){const l=Math.cos(n),h=Math.sin(n);return this.set(e*l,e*h,-e*(l*a+h*r)+a+t,-s*h,s*l,-s*(-h*a+l*r)+r+i,0,0,1),this}scale(t,i){return this.premultiply(Jt.makeScale(t,i)),this}rotate(t){return this.premultiply(Jt.makeRotation(-t)),this}translate(t,i){return this.premultiply(Jt.makeTranslation(t,i)),this}makeTranslation(t,i){return this.set(1,0,t,0,1,i,0,0,1),this}makeRotation(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,e,i,0,0,0,1),this}makeScale(t,i){return this.set(t,0,0,0,i,0,0,0,1),this}equals(t){const i=this.elements,e=t.elements;for(let s=0;s<9;s++)if(i[s]!==e[s])return!1;return!0}fromArray(t,i=0){for(let e=0;e<9;e++)this.elements[e]=t[e+i];return this}toArray(t=[],i=0){const e=this.elements;return t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3],t[i+4]=e[4],t[i+5]=e[5],t[i+6]=e[6],t[i+7]=e[7],t[i+8]=e[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Jt=new ct;function Ni(y){for(let t=y.length-1;t>=0;--t)if(y[t]>=65535)return!0;return!1}function ci(y){return document.createElementNS("http://www.w3.org/1999/xhtml",y)}function Ht(y){return y<.04045?y*.0773993808:Math.pow(y*.9478672986+.0521327014,2.4)}let st;class vi{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let i;if(t instanceof HTMLCanvasElement)i=t;else{st===void 0&&(st=ci("canvas")),st.width=t.width,st.height=t.height;const e=st.getContext("2d");t instanceof ImageData?e.putImageData(t,0,0):e.drawImage(t,0,0,t.width,t.height),i=st}return i.width>2048||i.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),i.toDataURL("image/jpeg",.6)):i.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const i=ci("canvas");i.width=t.width,i.height=t.height;const e=i.getContext("2d");e.drawImage(t,0,0,t.width,t.height);const s=e.getImageData(0,0,t.width,t.height),n=s.data;for(let a=0;a<n.length;a++)n[a]=Ht(n[a]/255)*255;return e.putImageData(s,0,0),i}else if(t.data){const i=t.data.slice(0);for(let e=0;e<i.length;e++)i instanceof Uint8Array||i instanceof Uint8ClampedArray?i[e]=Math.floor(Ht(i[e]/255)*255):i[e]=Ht(i[e]);return{data:i,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}class Ui{constructor(t=null){this.isSource=!0,this.uuid=St(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const e={uuid:this.uuid,url:""},s=this.data;if(s!==null){let n;if(Array.isArray(s)){n=[];for(let a=0,r=s.length;a<r;a++)s[a].isDataTexture?n.push(jt(s[a].image)):n.push(jt(s[a]))}else n=jt(s);e.url=n}return i||(t.images[this.uuid]=e),e}}function jt(y){return typeof HTMLImageElement<"u"&&y instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&y instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&y instanceof ImageBitmap?vi.getDataURL(y):y.data?{data:Array.from(y.data),width:y.width,height:y.height,type:y.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Wi=0;class et extends Xt{constructor(t=et.DEFAULT_IMAGE,i=et.DEFAULT_MAPPING,e=It,s=It,n=Bi,a=ki,r=Ri,l=Ei,h=et.DEFAULT_ANISOTROPY,o=Fi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Wi++}),this.uuid=St(),this.name="",this.source=new Ui(t),this.mipmaps=[],this.mapping=i,this.wrapS=e,this.wrapT=s,this.magFilter=n,this.minFilter=a,this.anisotropy=h,this.format=r,this.internalFormat=null,this.type=l,this.offset=new D(0,0),this.repeat=new D(1,1),this.center=new D(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ct,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=o,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const i=t===void 0||typeof t=="string";if(!i&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const e={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(e.userData=this.userData),i||(t.textures[this.uuid]=e),e}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==wi)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case oi:t.x=t.x-Math.floor(t.x);break;case It:t.x=t.x<0?0:1;break;case li:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case oi:t.y=t.y-Math.floor(t.y);break;case It:t.y=t.y<0?0:1;break;case li:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}et.DEFAULT_IMAGE=null;et.DEFAULT_MAPPING=wi;et.DEFAULT_ANISOTROPY=1;class At{constructor(t=0,i=0,e=0,s=1){this.isQuaternion=!0,this._x=t,this._y=i,this._z=e,this._w=s}static slerpFlat(t,i,e,s,n,a,r){let l=e[s+0],h=e[s+1],o=e[s+2],u=e[s+3];const c=n[a+0],d=n[a+1],m=n[a+2],p=n[a+3];if(r===0){t[i+0]=l,t[i+1]=h,t[i+2]=o,t[i+3]=u;return}if(r===1){t[i+0]=c,t[i+1]=d,t[i+2]=m,t[i+3]=p;return}if(u!==p||l!==c||h!==d||o!==m){let g=1-r;const x=l*c+h*d+o*m+u*p,w=x>=0?1:-1,T=1-x*x;if(T>Number.EPSILON){const _=Math.sqrt(T),S=Math.atan2(_,x*w);g=Math.sin(g*S)/_,r=Math.sin(r*S)/_}const z=r*w;if(l=l*g+c*z,h=h*g+d*z,o=o*g+m*z,u=u*g+p*z,g===1-r){const _=1/Math.sqrt(l*l+h*h+o*o+u*u);l*=_,h*=_,o*=_,u*=_}}t[i]=l,t[i+1]=h,t[i+2]=o,t[i+3]=u}static multiplyQuaternionsFlat(t,i,e,s,n,a){const r=e[s],l=e[s+1],h=e[s+2],o=e[s+3],u=n[a],c=n[a+1],d=n[a+2],m=n[a+3];return t[i]=r*m+o*u+l*d-h*c,t[i+1]=l*m+o*c+h*u-r*d,t[i+2]=h*m+o*d+r*c-l*u,t[i+3]=o*m-r*u-l*c-h*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,i,e,s){return this._x=t,this._y=i,this._z=e,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,i){const e=t._x,s=t._y,n=t._z,a=t._order,r=Math.cos,l=Math.sin,h=r(e/2),o=r(s/2),u=r(n/2),c=l(e/2),d=l(s/2),m=l(n/2);switch(a){case"XYZ":this._x=c*o*u+h*d*m,this._y=h*d*u-c*o*m,this._z=h*o*m+c*d*u,this._w=h*o*u-c*d*m;break;case"YXZ":this._x=c*o*u+h*d*m,this._y=h*d*u-c*o*m,this._z=h*o*m-c*d*u,this._w=h*o*u+c*d*m;break;case"ZXY":this._x=c*o*u-h*d*m,this._y=h*d*u+c*o*m,this._z=h*o*m+c*d*u,this._w=h*o*u-c*d*m;break;case"ZYX":this._x=c*o*u-h*d*m,this._y=h*d*u+c*o*m,this._z=h*o*m-c*d*u,this._w=h*o*u+c*d*m;break;case"YZX":this._x=c*o*u+h*d*m,this._y=h*d*u+c*o*m,this._z=h*o*m-c*d*u,this._w=h*o*u-c*d*m;break;case"XZY":this._x=c*o*u-h*d*m,this._y=h*d*u-c*o*m,this._z=h*o*m+c*d*u,this._w=h*o*u+c*d*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return i!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,i){const e=i/2,s=Math.sin(e);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(e),this._onChangeCallback(),this}setFromRotationMatrix(t){const i=t.elements,e=i[0],s=i[4],n=i[8],a=i[1],r=i[5],l=i[9],h=i[2],o=i[6],u=i[10],c=e+r+u;if(c>0){const d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(o-l)*d,this._y=(n-h)*d,this._z=(a-s)*d}else if(e>r&&e>u){const d=2*Math.sqrt(1+e-r-u);this._w=(o-l)/d,this._x=.25*d,this._y=(s+a)/d,this._z=(n+h)/d}else if(r>u){const d=2*Math.sqrt(1+r-e-u);this._w=(n-h)/d,this._x=(s+a)/d,this._y=.25*d,this._z=(l+o)/d}else{const d=2*Math.sqrt(1+u-e-r);this._w=(a-s)/d,this._x=(n+h)/d,this._y=(l+o)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,i){let e=t.dot(i)+1;return e<Number.EPSILON?(e=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=e):(this._x=0,this._y=-t.z,this._z=t.y,this._w=e)):(this._x=t.y*i.z-t.z*i.y,this._y=t.z*i.x-t.x*i.z,this._z=t.x*i.y-t.y*i.x,this._w=e),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(j(this.dot(t),-1,1)))}rotateTowards(t,i){const e=this.angleTo(t);if(e===0)return this;const s=Math.min(1,i/e);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,i){const e=t._x,s=t._y,n=t._z,a=t._w,r=i._x,l=i._y,h=i._z,o=i._w;return this._x=e*o+a*r+s*h-n*l,this._y=s*o+a*l+n*r-e*h,this._z=n*o+a*h+e*l-s*r,this._w=a*o-e*r-s*l-n*h,this._onChangeCallback(),this}slerp(t,i){if(i===0)return this;if(i===1)return this.copy(t);const e=this._x,s=this._y,n=this._z,a=this._w;let r=a*t._w+e*t._x+s*t._y+n*t._z;if(r<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,r=-r):this.copy(t),r>=1)return this._w=a,this._x=e,this._y=s,this._z=n,this;const l=1-r*r;if(l<=Number.EPSILON){const d=1-i;return this._w=d*a+i*this._w,this._x=d*e+i*this._x,this._y=d*s+i*this._y,this._z=d*n+i*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(l),o=Math.atan2(h,r),u=Math.sin((1-i)*o)/h,c=Math.sin(i*o)/h;return this._w=a*u+this._w*c,this._x=e*u+this._x*c,this._y=s*u+this._y*c,this._z=n*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,i,e){return this.copy(t).slerp(i,e)}random(){const t=Math.random(),i=Math.sqrt(1-t),e=Math.sqrt(t),s=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(i*Math.cos(s),e*Math.sin(n),e*Math.cos(n),i*Math.sin(s))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,i=0){return this._x=t[i],this._y=t[i+1],this._z=t[i+2],this._w=t[i+3],this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._w,t}fromBufferAttribute(t,i){return this._x=t.getX(i),this._y=t.getY(i),this._z=t.getZ(i),this._w=t.getW(i),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class f{constructor(t=0,i=0,e=0){f.prototype.isVector3=!0,this.x=t,this.y=i,this.z=e}set(t,i,e){return e===void 0&&(e=this.z),this.x=t,this.y=i,this.z=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}addScaledVector(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}applyEuler(t){return this.applyQuaternion(di.setFromEuler(t))}applyAxisAngle(t,i){return this.applyQuaternion(di.setFromAxisAngle(t,i))}applyMatrix3(t){const i=this.x,e=this.y,s=this.z,n=t.elements;return this.x=n[0]*i+n[3]*e+n[6]*s,this.y=n[1]*i+n[4]*e+n[7]*s,this.z=n[2]*i+n[5]*e+n[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const i=this.x,e=this.y,s=this.z,n=t.elements,a=1/(n[3]*i+n[7]*e+n[11]*s+n[15]);return this.x=(n[0]*i+n[4]*e+n[8]*s+n[12])*a,this.y=(n[1]*i+n[5]*e+n[9]*s+n[13])*a,this.z=(n[2]*i+n[6]*e+n[10]*s+n[14])*a,this}applyQuaternion(t){const i=this.x,e=this.y,s=this.z,n=t.x,a=t.y,r=t.z,l=t.w,h=l*i+a*s-r*e,o=l*e+r*i-n*s,u=l*s+n*e-a*i,c=-n*i-a*e-r*s;return this.x=h*l+c*-n+o*-r-u*-a,this.y=o*l+c*-a+u*-n-h*-r,this.z=u*l+c*-r+h*-a-o*-n,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const i=this.x,e=this.y,s=this.z,n=t.elements;return this.x=n[0]*i+n[4]*e+n[8]*s,this.y=n[1]*i+n[5]*e+n[9]*s,this.z=n[2]*i+n[6]*e+n[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}clampScalar(t,i){return this.x=Math.max(t,Math.min(i,this.x)),this.y=Math.max(t,Math.min(i,this.y)),this.z=Math.max(t,Math.min(i,this.z)),this}clampLength(t,i){const e=this.length();return this.divideScalar(e||1).multiplyScalar(Math.max(t,Math.min(i,e)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}lerpVectors(t,i,e){return this.x=t.x+(i.x-t.x)*e,this.y=t.y+(i.y-t.y)*e,this.z=t.z+(i.z-t.z)*e,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,i){const e=t.x,s=t.y,n=t.z,a=i.x,r=i.y,l=i.z;return this.x=s*l-n*r,this.y=n*a-e*l,this.z=e*r-s*a,this}projectOnVector(t){const i=t.lengthSq();if(i===0)return this.set(0,0,0);const e=t.dot(this)/i;return this.copy(t).multiplyScalar(e)}projectOnPlane(t){return Gt.copy(this).projectOnVector(t),this.sub(Gt)}reflect(t){return this.sub(Gt.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const i=Math.sqrt(this.lengthSq()*t.lengthSq());if(i===0)return Math.PI/2;const e=this.dot(t)/i;return Math.acos(j(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const i=this.x-t.x,e=this.y-t.y,s=this.z-t.z;return i*i+e*e+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,i,e){const s=Math.sin(i)*t;return this.x=s*Math.sin(e),this.y=Math.cos(i)*t,this.z=s*Math.cos(e),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,i,e){return this.x=t*Math.sin(i),this.y=e,this.z=t*Math.cos(i),this}setFromMatrixPosition(t){const i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}setFromMatrixScale(t){const i=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=e,this.z=s,this}setFromMatrixColumn(t,i){return this.fromArray(t.elements,i*4)}setFromMatrix3Column(t,i){return this.fromArray(t.elements,i*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,i=0){return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}toArray(t=[],i=0){return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}fromBufferAttribute(t,i){return this.x=t.getX(i),this.y=t.getY(i),this.z=t.getZ(i),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,i=Math.random()*Math.PI*2,e=Math.sqrt(1-t**2);return this.x=e*Math.cos(i),this.y=e*Math.sin(i),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Gt=new f,di=new At;class Tt{constructor(t=new f(1/0,1/0,1/0),i=new f(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=i}set(t,i){return this.min.copy(t),this.max.copy(i),this}setFromArray(t){let i=1/0,e=1/0,s=1/0,n=-1/0,a=-1/0,r=-1/0;for(let l=0,h=t.length;l<h;l+=3){const o=t[l],u=t[l+1],c=t[l+2];o<i&&(i=o),u<e&&(e=u),c<s&&(s=c),o>n&&(n=o),u>a&&(a=u),c>r&&(r=c)}return this.min.set(i,e,s),this.max.set(n,a,r),this}setFromBufferAttribute(t){let i=1/0,e=1/0,s=1/0,n=-1/0,a=-1/0,r=-1/0;for(let l=0,h=t.count;l<h;l++){const o=t.getX(l),u=t.getY(l),c=t.getZ(l);o<i&&(i=o),u<e&&(e=u),c<s&&(s=c),o>n&&(n=o),u>a&&(a=u),c>r&&(r=c)}return this.min.set(i,e,s),this.max.set(n,a,r),this}setFromPoints(t){this.makeEmpty();for(let i=0,e=t.length;i<e;i++)this.expandByPoint(t[i]);return this}setFromCenterAndSize(t,i){const e=K.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}setFromObject(t,i=!1){return this.makeEmpty(),this.expandByObject(t,i)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,i=!1){t.updateWorldMatrix(!1,!1);const e=t.geometry;if(e!==void 0)if(i&&e.attributes!=null&&e.attributes.position!==void 0){const n=e.attributes.position;for(let a=0,r=n.count;a<r;a++)K.fromBufferAttribute(n,a).applyMatrix4(t.matrixWorld),this.expandByPoint(K)}else e.boundingBox===null&&e.computeBoundingBox(),Qt.copy(e.boundingBox),Qt.applyMatrix4(t.matrixWorld),this.union(Qt);const s=t.children;for(let n=0,a=s.length;n<a;n++)this.expandByObject(s[n],i);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,i){return i.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,K),K.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let i,e;return t.normal.x>0?(i=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),i<=-t.constant&&e>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(dt),Nt.subVectors(this.max,dt),nt.subVectors(t.a,dt),rt.subVectors(t.b,dt),at.subVectors(t.c,dt),$.subVectors(rt,nt),J.subVectors(at,rt),tt.subVectors(nt,at);let i=[0,-$.z,$.y,0,-J.z,J.y,0,-tt.z,tt.y,$.z,0,-$.x,J.z,0,-J.x,tt.z,0,-tt.x,-$.y,$.x,0,-J.y,J.x,0,-tt.y,tt.x,0];return!Kt(i,nt,rt,at,Nt)||(i=[1,0,0,0,1,0,0,0,1],!Kt(i,nt,rt,at,Nt))?!1:(vt.crossVectors($,J),i=[vt.x,vt.y,vt.z],Kt(i,nt,rt,at,Nt))}clampPoint(t,i){return i.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return K.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(K).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(V[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),V[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),V[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),V[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),V[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),V[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),V[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),V[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(V),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const V=[new f,new f,new f,new f,new f,new f,new f,new f],K=new f,Qt=new Tt,nt=new f,rt=new f,at=new f,$=new f,J=new f,tt=new f,dt=new f,Nt=new f,vt=new f,it=new f;function Kt(y,t,i,e,s){for(let n=0,a=y.length-3;n<=a;n+=3){it.fromArray(y,n);const r=s.x*Math.abs(it.x)+s.y*Math.abs(it.y)+s.z*Math.abs(it.z),l=t.dot(it),h=i.dot(it),o=e.dot(it);if(Math.max(-Math.max(l,h,o),Math.min(l,h,o))>r)return!1}return!0}const qi=new Tt,mt=new f,ti=new f;class Di{constructor(t=new f,i=-1){this.center=t,this.radius=i}set(t,i){return this.center.copy(t),this.radius=i,this}setFromPoints(t,i){const e=this.center;i!==void 0?e.copy(i):qi.setFromPoints(t).getCenter(e);let s=0;for(let n=0,a=t.length;n<a;n++)s=Math.max(s,e.distanceToSquared(t[n]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const i=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=i*i}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,i){const e=this.center.distanceToSquared(t);return i.copy(t),e>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;mt.subVectors(t,this.center);const i=mt.lengthSq();if(i>this.radius*this.radius){const e=Math.sqrt(i),s=(e-this.radius)*.5;this.center.addScaledVector(mt,s/e),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(ti.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(mt.copy(t.center).add(ti)),this.expandByPoint(mt.copy(t.center).sub(ti))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}class P{constructor(){P.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,i,e,s,n,a,r,l,h,o,u,c,d,m,p,g){const x=this.elements;return x[0]=t,x[4]=i,x[8]=e,x[12]=s,x[1]=n,x[5]=a,x[9]=r,x[13]=l,x[2]=h,x[6]=o,x[10]=u,x[14]=c,x[3]=d,x[7]=m,x[11]=p,x[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new P().fromArray(this.elements)}copy(t){const i=this.elements,e=t.elements;return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],i[9]=e[9],i[10]=e[10],i[11]=e[11],i[12]=e[12],i[13]=e[13],i[14]=e[14],i[15]=e[15],this}copyPosition(t){const i=this.elements,e=t.elements;return i[12]=e[12],i[13]=e[13],i[14]=e[14],this}setFromMatrix3(t){const i=t.elements;return this.set(i[0],i[3],i[6],0,i[1],i[4],i[7],0,i[2],i[5],i[8],0,0,0,0,1),this}extractBasis(t,i,e){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}makeBasis(t,i,e){return this.set(t.x,i.x,e.x,0,t.y,i.y,e.y,0,t.z,i.z,e.z,0,0,0,0,1),this}extractRotation(t){const i=this.elements,e=t.elements,s=1/ht.setFromMatrixColumn(t,0).length(),n=1/ht.setFromMatrixColumn(t,1).length(),a=1/ht.setFromMatrixColumn(t,2).length();return i[0]=e[0]*s,i[1]=e[1]*s,i[2]=e[2]*s,i[3]=0,i[4]=e[4]*n,i[5]=e[5]*n,i[6]=e[6]*n,i[7]=0,i[8]=e[8]*a,i[9]=e[9]*a,i[10]=e[10]*a,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromEuler(t){const i=this.elements,e=t.x,s=t.y,n=t.z,a=Math.cos(e),r=Math.sin(e),l=Math.cos(s),h=Math.sin(s),o=Math.cos(n),u=Math.sin(n);if(t.order==="XYZ"){const c=a*o,d=a*u,m=r*o,p=r*u;i[0]=l*o,i[4]=-l*u,i[8]=h,i[1]=d+m*h,i[5]=c-p*h,i[9]=-r*l,i[2]=p-c*h,i[6]=m+d*h,i[10]=a*l}else if(t.order==="YXZ"){const c=l*o,d=l*u,m=h*o,p=h*u;i[0]=c+p*r,i[4]=m*r-d,i[8]=a*h,i[1]=a*u,i[5]=a*o,i[9]=-r,i[2]=d*r-m,i[6]=p+c*r,i[10]=a*l}else if(t.order==="ZXY"){const c=l*o,d=l*u,m=h*o,p=h*u;i[0]=c-p*r,i[4]=-a*u,i[8]=m+d*r,i[1]=d+m*r,i[5]=a*o,i[9]=p-c*r,i[2]=-a*h,i[6]=r,i[10]=a*l}else if(t.order==="ZYX"){const c=a*o,d=a*u,m=r*o,p=r*u;i[0]=l*o,i[4]=m*h-d,i[8]=c*h+p,i[1]=l*u,i[5]=p*h+c,i[9]=d*h-m,i[2]=-h,i[6]=r*l,i[10]=a*l}else if(t.order==="YZX"){const c=a*l,d=a*h,m=r*l,p=r*h;i[0]=l*o,i[4]=p-c*u,i[8]=m*u+d,i[1]=u,i[5]=a*o,i[9]=-r*o,i[2]=-h*o,i[6]=d*u+m,i[10]=c-p*u}else if(t.order==="XZY"){const c=a*l,d=a*h,m=r*l,p=r*h;i[0]=l*o,i[4]=-u,i[8]=h*o,i[1]=c*u+p,i[5]=a*o,i[9]=d*u-m,i[2]=m*u-d,i[6]=r*o,i[10]=p*u+c}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Pi,t,Vi)}lookAt(t,i,e){const s=this.elements;return O.subVectors(t,i),O.lengthSq()===0&&(O.z=1),O.normalize(),H.crossVectors(e,O),H.lengthSq()===0&&(Math.abs(e.z)===1?O.x+=1e-4:O.z+=1e-4,O.normalize(),H.crossVectors(e,O)),H.normalize(),Ut.crossVectors(O,H),s[0]=H.x,s[4]=Ut.x,s[8]=O.x,s[1]=H.y,s[5]=Ut.y,s[9]=O.y,s[2]=H.z,s[6]=Ut.z,s[10]=O.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,i){const e=t.elements,s=i.elements,n=this.elements,a=e[0],r=e[4],l=e[8],h=e[12],o=e[1],u=e[5],c=e[9],d=e[13],m=e[2],p=e[6],g=e[10],x=e[14],w=e[3],T=e[7],z=e[11],_=e[15],S=s[0],M=s[4],Q=s[8],Z=s[12],b=s[1],B=s[5],k=s[9],E=s[13],L=s[2],R=s[6],X=s[10],Bt=s[14],kt=s[3],Et=s[7],Rt=s[11],Ft=s[15];return n[0]=a*S+r*b+l*L+h*kt,n[4]=a*M+r*B+l*R+h*Et,n[8]=a*Q+r*k+l*X+h*Rt,n[12]=a*Z+r*E+l*Bt+h*Ft,n[1]=o*S+u*b+c*L+d*kt,n[5]=o*M+u*B+c*R+d*Et,n[9]=o*Q+u*k+c*X+d*Rt,n[13]=o*Z+u*E+c*Bt+d*Ft,n[2]=m*S+p*b+g*L+x*kt,n[6]=m*M+p*B+g*R+x*Et,n[10]=m*Q+p*k+g*X+x*Rt,n[14]=m*Z+p*E+g*Bt+x*Ft,n[3]=w*S+T*b+z*L+_*kt,n[7]=w*M+T*B+z*R+_*Et,n[11]=w*Q+T*k+z*X+_*Rt,n[15]=w*Z+T*E+z*Bt+_*Ft,this}multiplyScalar(t){const i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this}determinant(){const t=this.elements,i=t[0],e=t[4],s=t[8],n=t[12],a=t[1],r=t[5],l=t[9],h=t[13],o=t[2],u=t[6],c=t[10],d=t[14],m=t[3],p=t[7],g=t[11],x=t[15];return m*(+n*l*u-s*h*u-n*r*c+e*h*c+s*r*d-e*l*d)+p*(+i*l*d-i*h*c+n*a*c-s*a*d+s*h*o-n*l*o)+g*(+i*h*u-i*r*d-n*a*u+e*a*d+n*r*o-e*h*o)+x*(-s*r*o-i*l*u+i*r*c+s*a*u-e*a*c+e*l*o)}transpose(){const t=this.elements;let i;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this}setPosition(t,i,e){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=i,s[14]=e),this}invert(){const t=this.elements,i=t[0],e=t[1],s=t[2],n=t[3],a=t[4],r=t[5],l=t[6],h=t[7],o=t[8],u=t[9],c=t[10],d=t[11],m=t[12],p=t[13],g=t[14],x=t[15],w=u*g*h-p*c*h+p*l*d-r*g*d-u*l*x+r*c*x,T=m*c*h-o*g*h-m*l*d+a*g*d+o*l*x-a*c*x,z=o*p*h-m*u*h+m*r*d-a*p*d-o*r*x+a*u*x,_=m*u*l-o*p*l-m*r*c+a*p*c+o*r*g-a*u*g,S=i*w+e*T+s*z+n*_;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/S;return t[0]=w*M,t[1]=(p*c*n-u*g*n-p*s*d+e*g*d+u*s*x-e*c*x)*M,t[2]=(r*g*n-p*l*n+p*s*h-e*g*h-r*s*x+e*l*x)*M,t[3]=(u*l*n-r*c*n-u*s*h+e*c*h+r*s*d-e*l*d)*M,t[4]=T*M,t[5]=(o*g*n-m*c*n+m*s*d-i*g*d-o*s*x+i*c*x)*M,t[6]=(m*l*n-a*g*n-m*s*h+i*g*h+a*s*x-i*l*x)*M,t[7]=(a*c*n-o*l*n+o*s*h-i*c*h-a*s*d+i*l*d)*M,t[8]=z*M,t[9]=(m*u*n-o*p*n-m*e*d+i*p*d+o*e*x-i*u*x)*M,t[10]=(a*p*n-m*r*n+m*e*h-i*p*h-a*e*x+i*r*x)*M,t[11]=(o*r*n-a*u*n-o*e*h+i*u*h+a*e*d-i*r*d)*M,t[12]=_*M,t[13]=(o*p*s-m*u*s+m*e*c-i*p*c-o*e*g+i*u*g)*M,t[14]=(m*r*s-a*p*s-m*e*l+i*p*l+a*e*g-i*r*g)*M,t[15]=(a*u*s-o*r*s+o*e*l-i*u*l-a*e*c+i*r*c)*M,this}scale(t){const i=this.elements,e=t.x,s=t.y,n=t.z;return i[0]*=e,i[4]*=s,i[8]*=n,i[1]*=e,i[5]*=s,i[9]*=n,i[2]*=e,i[6]*=s,i[10]*=n,i[3]*=e,i[7]*=s,i[11]*=n,this}getMaxScaleOnAxis(){const t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,e,s))}makeTranslation(t,i,e){return this.set(1,0,0,t,0,1,0,i,0,0,1,e,0,0,0,1),this}makeRotationX(t){const i=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,i,-e,0,0,e,i,0,0,0,0,1),this}makeRotationY(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,0,e,0,0,1,0,0,-e,0,i,0,0,0,0,1),this}makeRotationZ(t){const i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,0,e,i,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,i){const e=Math.cos(i),s=Math.sin(i),n=1-e,a=t.x,r=t.y,l=t.z,h=n*a,o=n*r;return this.set(h*a+e,h*r-s*l,h*l+s*r,0,h*r+s*l,o*r+e,o*l-s*a,0,h*l-s*r,o*l+s*a,n*l*l+e,0,0,0,0,1),this}makeScale(t,i,e){return this.set(t,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1),this}makeShear(t,i,e,s,n,a){return this.set(1,e,n,0,t,1,a,0,i,s,1,0,0,0,0,1),this}compose(t,i,e){const s=this.elements,n=i._x,a=i._y,r=i._z,l=i._w,h=n+n,o=a+a,u=r+r,c=n*h,d=n*o,m=n*u,p=a*o,g=a*u,x=r*u,w=l*h,T=l*o,z=l*u,_=e.x,S=e.y,M=e.z;return s[0]=(1-(p+x))*_,s[1]=(d+z)*_,s[2]=(m-T)*_,s[3]=0,s[4]=(d-z)*S,s[5]=(1-(c+x))*S,s[6]=(g+w)*S,s[7]=0,s[8]=(m+T)*M,s[9]=(g-w)*M,s[10]=(1-(c+p))*M,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,i,e){const s=this.elements;let n=ht.set(s[0],s[1],s[2]).length();const a=ht.set(s[4],s[5],s[6]).length(),r=ht.set(s[8],s[9],s[10]).length();this.determinant()<0&&(n=-n),t.x=s[12],t.y=s[13],t.z=s[14],U.copy(this);const h=1/n,o=1/a,u=1/r;return U.elements[0]*=h,U.elements[1]*=h,U.elements[2]*=h,U.elements[4]*=o,U.elements[5]*=o,U.elements[6]*=o,U.elements[8]*=u,U.elements[9]*=u,U.elements[10]*=u,i.setFromRotationMatrix(U),e.x=n,e.y=a,e.z=r,this}makePerspective(t,i,e,s,n,a){const r=this.elements,l=2*n/(i-t),h=2*n/(e-s),o=(i+t)/(i-t),u=(e+s)/(e-s),c=-(a+n)/(a-n),d=-2*a*n/(a-n);return r[0]=l,r[4]=0,r[8]=o,r[12]=0,r[1]=0,r[5]=h,r[9]=u,r[13]=0,r[2]=0,r[6]=0,r[10]=c,r[14]=d,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this}makeOrthographic(t,i,e,s,n,a){const r=this.elements,l=1/(i-t),h=1/(e-s),o=1/(a-n),u=(i+t)*l,c=(e+s)*h,d=(a+n)*o;return r[0]=2*l,r[4]=0,r[8]=0,r[12]=-u,r[1]=0,r[5]=2*h,r[9]=0,r[13]=-c,r[2]=0,r[6]=0,r[10]=-2*o,r[14]=-d,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this}equals(t){const i=this.elements,e=t.elements;for(let s=0;s<16;s++)if(i[s]!==e[s])return!1;return!0}fromArray(t,i=0){for(let e=0;e<16;e++)this.elements[e]=t[e+i];return this}toArray(t=[],i=0){const e=this.elements;return t[i]=e[0],t[i+1]=e[1],t[i+2]=e[2],t[i+3]=e[3],t[i+4]=e[4],t[i+5]=e[5],t[i+6]=e[6],t[i+7]=e[7],t[i+8]=e[8],t[i+9]=e[9],t[i+10]=e[10],t[i+11]=e[11],t[i+12]=e[12],t[i+13]=e[13],t[i+14]=e[14],t[i+15]=e[15],t}}const ht=new f,U=new P,Pi=new f(0,0,0),Vi=new f(1,1,1),H=new f,Ut=new f,O=new f,mi=new P,pi=new At;class Ct{constructor(t=0,i=0,e=0,s=Ct.DefaultOrder){this.isEuler=!0,this._x=t,this._y=i,this._z=e,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,i,e,s=this._order){return this._x=t,this._y=i,this._z=e,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,i=this._order,e=!0){const s=t.elements,n=s[0],a=s[4],r=s[8],l=s[1],h=s[5],o=s[9],u=s[2],c=s[6],d=s[10];switch(i){case"XYZ":this._y=Math.asin(j(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-o,d),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(c,h),this._z=0);break;case"YXZ":this._x=Math.asin(-j(o,-1,1)),Math.abs(o)<.9999999?(this._y=Math.atan2(r,d),this._z=Math.atan2(l,h)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(j(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(l,n));break;case"ZYX":this._y=Math.asin(-j(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(c,d),this._z=Math.atan2(l,n)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(j(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-o,h),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(r,d));break;case"XZY":this._z=Math.asin(-j(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(c,h),this._y=Math.atan2(r,n)):(this._x=Math.atan2(-o,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+i)}return this._order=i,e===!0&&this._onChangeCallback(),this}setFromQuaternion(t,i,e){return mi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(mi,i,e)}setFromVector3(t,i=this._order){return this.set(t.x,t.y,t.z,i)}reorder(t){return pi.setFromEuler(this),this.setFromQuaternion(pi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],i=0){return t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Ct.DefaultOrder="XYZ";Ct.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Yi{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Zi=0;const fi=new f,ot=new At,Y=new P,Wt=new f,pt=new f,Li=new f,Xi=new At,yi=new f(1,0,0),xi=new f(0,1,0),gi=new f(0,0,1),$i={type:"added"},Mi={type:"removed"};class G extends Xt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Zi++}),this.uuid=St(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=G.DefaultUp.clone();const t=new f,i=new Ct,e=new At,s=new f(1,1,1);function n(){e.setFromEuler(i,!1)}function a(){i.setFromQuaternion(e,void 0,!1)}i._onChange(n),e._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new P},normalMatrix:{value:new ct}}),this.matrix=new P,this.matrixWorld=new P,this.matrixAutoUpdate=G.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=G.DefaultMatrixWorldAutoUpdate,this.layers=new Yi,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,i){this.quaternion.setFromAxisAngle(t,i)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,i){return ot.setFromAxisAngle(t,i),this.quaternion.multiply(ot),this}rotateOnWorldAxis(t,i){return ot.setFromAxisAngle(t,i),this.quaternion.premultiply(ot),this}rotateX(t){return this.rotateOnAxis(yi,t)}rotateY(t){return this.rotateOnAxis(xi,t)}rotateZ(t){return this.rotateOnAxis(gi,t)}translateOnAxis(t,i){return fi.copy(t).applyQuaternion(this.quaternion),this.position.add(fi.multiplyScalar(i)),this}translateX(t){return this.translateOnAxis(yi,t)}translateY(t){return this.translateOnAxis(xi,t)}translateZ(t){return this.translateOnAxis(gi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Y.copy(this.matrixWorld).invert())}lookAt(t,i,e){t.isVector3?Wt.copy(t):Wt.set(t,i,e);const s=this.parent;this.updateWorldMatrix(!0,!1),pt.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Y.lookAt(pt,Wt,this.up):Y.lookAt(Wt,pt,this.up),this.quaternion.setFromRotationMatrix(Y),s&&(Y.extractRotation(s.matrixWorld),ot.setFromRotationMatrix(Y),this.quaternion.premultiply(ot.invert()))}add(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.add(arguments[i]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent($i)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const i=this.children.indexOf(t);return i!==-1&&(t.parent=null,this.children.splice(i,1),t.dispatchEvent(Mi)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const i=this.children[t];i.parent=null,i.dispatchEvent(Mi)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Y.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Y.multiply(t.parent.matrixWorld)),t.applyMatrix4(Y),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,i){if(this[t]===i)return this;for(let e=0,s=this.children.length;e<s;e++){const a=this.children[e].getObjectByProperty(t,i);if(a!==void 0)return a}}getObjectsByProperty(t,i){let e=[];this[t]===i&&e.push(this);for(let s=0,n=this.children.length;s<n;s++){const a=this.children[s].getObjectsByProperty(t,i);a.length>0&&(e=e.concat(a))}return e}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(pt,t,Li),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(pt,Xi,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const i=this.matrixWorld.elements;return t.set(i[8],i[9],i[10]).normalize()}raycast(){}traverse(t){t(this);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const i=this.children;for(let e=0,s=i.length;e<s;e++)i[e].traverseVisible(t)}traverseAncestors(t){const i=this.parent;i!==null&&(t(i),i.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const i=this.children;for(let e=0,s=i.length;e<s;e++){const n=i[e];(n.matrixWorldAutoUpdate===!0||t===!0)&&n.updateMatrixWorld(t)}}updateWorldMatrix(t,i){const e=this.parent;if(t===!0&&e!==null&&e.matrixWorldAutoUpdate===!0&&e.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),i===!0){const s=this.children;for(let n=0,a=s.length;n<a;n++){const r=s[n];r.matrixWorldAutoUpdate===!0&&r.updateWorldMatrix(!1,!0)}}}toJSON(t){const i=t===void 0||typeof t=="string",e={};i&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},e.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function n(r,l){return r[l.uuid]===void 0&&(r[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=n(t.geometries,this.geometry);const r=this.geometry.parameters;if(r!==void 0&&r.shapes!==void 0){const l=r.shapes;if(Array.isArray(l))for(let h=0,o=l.length;h<o;h++){const u=l[h];n(t.shapes,u)}else n(t.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const r=[];for(let l=0,h=this.material.length;l<h;l++)r.push(n(t.materials,this.material[l]));s.material=r}else s.material=n(t.materials,this.material);if(this.children.length>0){s.children=[];for(let r=0;r<this.children.length;r++)s.children.push(this.children[r].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let r=0;r<this.animations.length;r++){const l=this.animations[r];s.animations.push(n(t.animations,l))}}if(i){const r=a(t.geometries),l=a(t.materials),h=a(t.textures),o=a(t.images),u=a(t.shapes),c=a(t.skeletons),d=a(t.animations),m=a(t.nodes);r.length>0&&(e.geometries=r),l.length>0&&(e.materials=l),h.length>0&&(e.textures=h),o.length>0&&(e.images=o),u.length>0&&(e.shapes=u),c.length>0&&(e.skeletons=c),d.length>0&&(e.animations=d),m.length>0&&(e.nodes=m)}return e.object=s,e;function a(r){const l=[];for(const h in r){const o=r[h];delete o.metadata,l.push(o)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,i=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),i===!0)for(let e=0;e<t.children.length;e++){const s=t.children[e];this.add(s.clone())}return this}}G.DefaultUp=new f(0,1,0);G.DefaultMatrixAutoUpdate=!0;G.DefaultMatrixWorldAutoUpdate=!0;let Ji=0;class Hi extends Xt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Ji++}),this.uuid=St(),this.name="",this.type="Material",this.blending=hi,this.side=ai,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Ai,this.blendDst=Ti,this.blendEquation=Si,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ci,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Oi,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=$t,this.stencilZFail=$t,this.stencilZPass=$t,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const i in t){const e=t[i];if(e===void 0){console.warn("THREE.Material: '"+i+"' parameter is undefined.");continue}const s=this[i];if(s===void 0){console.warn("THREE."+this.type+": '"+i+"' is not a property of this material.");continue}s&&s.isColor?s.set(e):s&&s.isVector3&&e&&e.isVector3?s.copy(e):this[i]=e}}toJSON(t){const i=t===void 0||typeof t=="string";i&&(t={textures:{},images:{}});const e={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.color&&this.color.isColor&&(e.color=this.color.getHex()),this.roughness!==void 0&&(e.roughness=this.roughness),this.metalness!==void 0&&(e.metalness=this.metalness),this.sheen!==void 0&&(e.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(e.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(e.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(e.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(e.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(e.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(e.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(e.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(e.shininess=this.shininess),this.clearcoat!==void 0&&(e.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(e.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(e.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(e.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(e.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,e.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(e.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(e.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(e.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(e.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(e.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(e.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(e.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(e.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(e.lightMap=this.lightMap.toJSON(t).uuid,e.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(e.aoMap=this.aoMap.toJSON(t).uuid,e.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(e.bumpMap=this.bumpMap.toJSON(t).uuid,e.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(e.normalMap=this.normalMap.toJSON(t).uuid,e.normalMapType=this.normalMapType,e.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(e.displacementMap=this.displacementMap.toJSON(t).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(e.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(e.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(e.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(e.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(e.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(e.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(e.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(e.combine=this.combine)),this.envMapIntensity!==void 0&&(e.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(e.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(e.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(e.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(e.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(e.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(e.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(e.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(e.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(e.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(e.size=this.size),this.shadowSide!==null&&(e.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(e.sizeAttenuation=this.sizeAttenuation),this.blending!==hi&&(e.blending=this.blending),this.side!==ai&&(e.side=this.side),this.vertexColors&&(e.vertexColors=!0),this.opacity<1&&(e.opacity=this.opacity),this.transparent===!0&&(e.transparent=this.transparent),e.depthFunc=this.depthFunc,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.colorWrite=this.colorWrite,e.stencilWrite=this.stencilWrite,e.stencilWriteMask=this.stencilWriteMask,e.stencilFunc=this.stencilFunc,e.stencilRef=this.stencilRef,e.stencilFuncMask=this.stencilFuncMask,e.stencilFail=this.stencilFail,e.stencilZFail=this.stencilZFail,e.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(e.rotation=this.rotation),this.polygonOffset===!0&&(e.polygonOffset=!0),this.polygonOffsetFactor!==0&&(e.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(e.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(e.linewidth=this.linewidth),this.dashSize!==void 0&&(e.dashSize=this.dashSize),this.gapSize!==void 0&&(e.gapSize=this.gapSize),this.scale!==void 0&&(e.scale=this.scale),this.dithering===!0&&(e.dithering=!0),this.alphaTest>0&&(e.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(e.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(e.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(e.wireframe=this.wireframe),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(e.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(e.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(e.flatShading=this.flatShading),this.visible===!1&&(e.visible=!1),this.toneMapped===!1&&(e.toneMapped=!1),this.fog===!1&&(e.fog=!1),Object.keys(this.userData).length>0&&(e.userData=this.userData);function s(n){const a=[];for(const r in n){const l=n[r];delete l.metadata,a.push(l)}return a}if(i){const n=s(t.textures),a=s(t.images);n.length>0&&(e.textures=n),a.length>0&&(e.images=a)}return e}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const i=t.clippingPlanes;let e=null;if(i!==null){const s=i.length;e=new Array(s);for(let n=0;n!==s;++n)e[n]=i[n].clone()}return this.clippingPlanes=e,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}const A=new f,qt=new D;class ut{constructor(t,i,e=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=i,this.count=t!==void 0?t.length/i:0,this.normalized=e,this.usage=ui,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,i,e){t*=this.itemSize,e*=i.itemSize;for(let s=0,n=this.itemSize;s<n;s++)this.array[t+s]=i.array[e+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let i=0,e=this.count;i<e;i++)qt.fromBufferAttribute(this,i),qt.applyMatrix3(t),this.setXY(i,qt.x,qt.y);else if(this.itemSize===3)for(let i=0,e=this.count;i<e;i++)A.fromBufferAttribute(this,i),A.applyMatrix3(t),this.setXYZ(i,A.x,A.y,A.z);return this}applyMatrix4(t){for(let i=0,e=this.count;i<e;i++)A.fromBufferAttribute(this,i),A.applyMatrix4(t),this.setXYZ(i,A.x,A.y,A.z);return this}applyNormalMatrix(t){for(let i=0,e=this.count;i<e;i++)A.fromBufferAttribute(this,i),A.applyNormalMatrix(t),this.setXYZ(i,A.x,A.y,A.z);return this}transformDirection(t){for(let i=0,e=this.count;i<e;i++)A.fromBufferAttribute(this,i),A.transformDirection(t),this.setXYZ(i,A.x,A.y,A.z);return this}set(t,i=0){return this.array.set(t,i),this}getX(t){let i=this.array[t*this.itemSize];return this.normalized&&(i=Ot(i,this.array)),i}setX(t,i){return this.normalized&&(i=I(i,this.array)),this.array[t*this.itemSize]=i,this}getY(t){let i=this.array[t*this.itemSize+1];return this.normalized&&(i=Ot(i,this.array)),i}setY(t,i){return this.normalized&&(i=I(i,this.array)),this.array[t*this.itemSize+1]=i,this}getZ(t){let i=this.array[t*this.itemSize+2];return this.normalized&&(i=Ot(i,this.array)),i}setZ(t,i){return this.normalized&&(i=I(i,this.array)),this.array[t*this.itemSize+2]=i,this}getW(t){let i=this.array[t*this.itemSize+3];return this.normalized&&(i=Ot(i,this.array)),i}setW(t,i){return this.normalized&&(i=I(i,this.array)),this.array[t*this.itemSize+3]=i,this}setXY(t,i,e){return t*=this.itemSize,this.normalized&&(i=I(i,this.array),e=I(e,this.array)),this.array[t+0]=i,this.array[t+1]=e,this}setXYZ(t,i,e,s){return t*=this.itemSize,this.normalized&&(i=I(i,this.array),e=I(e,this.array),s=I(s,this.array)),this.array[t+0]=i,this.array[t+1]=e,this.array[t+2]=s,this}setXYZW(t,i,e,s,n){return t*=this.itemSize,this.normalized&&(i=I(i,this.array),e=I(e,this.array),s=I(s,this.array),n=I(n,this.array)),this.array[t+0]=i,this.array[t+1]=e,this.array[t+2]=s,this.array[t+3]=n,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==ui&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class ji extends ut{constructor(t,i,e){super(new Uint16Array(t),i,e)}}class Gi extends ut{constructor(t,i,e){super(new Uint32Array(t),i,e)}}class Qi extends ut{constructor(t,i,e){super(new Float32Array(t),i,e)}}let Ki=0;const v=new P,ii=new G,lt=new f,N=new Tt,ft=new Tt,C=new f;class ri extends Xt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ki++}),this.uuid=St(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Ni(t)?Gi:ji)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,i){return this.attributes[t]=i,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,i,e=0){this.groups.push({start:t,count:i,materialIndex:e})}clearGroups(){this.groups=[]}setDrawRange(t,i){this.drawRange.start=t,this.drawRange.count=i}applyMatrix4(t){const i=this.attributes.position;i!==void 0&&(i.applyMatrix4(t),i.needsUpdate=!0);const e=this.attributes.normal;if(e!==void 0){const n=new ct().getNormalMatrix(t);e.applyNormalMatrix(n),e.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return v.makeRotationFromQuaternion(t),this.applyMatrix4(v),this}rotateX(t){return v.makeRotationX(t),this.applyMatrix4(v),this}rotateY(t){return v.makeRotationY(t),this.applyMatrix4(v),this}rotateZ(t){return v.makeRotationZ(t),this.applyMatrix4(v),this}translate(t,i,e){return v.makeTranslation(t,i,e),this.applyMatrix4(v),this}scale(t,i,e){return v.makeScale(t,i,e),this.applyMatrix4(v),this}lookAt(t){return ii.lookAt(t),ii.updateMatrix(),this.applyMatrix4(ii.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(lt).negate(),this.translate(lt.x,lt.y,lt.z),this}setFromPoints(t){const i=[];for(let e=0,s=t.length;e<s;e++){const n=t[e];i.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Qi(i,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Tt);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new f(-1/0,-1/0,-1/0),new f(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),i)for(let e=0,s=i.length;e<s;e++){const n=i[e];N.setFromBufferAttribute(n),this.morphTargetsRelative?(C.addVectors(this.boundingBox.min,N.min),this.boundingBox.expandByPoint(C),C.addVectors(this.boundingBox.max,N.max),this.boundingBox.expandByPoint(C)):(this.boundingBox.expandByPoint(N.min),this.boundingBox.expandByPoint(N.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Di);const t=this.attributes.position,i=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new f,1/0);return}if(t){const e=this.boundingSphere.center;if(N.setFromBufferAttribute(t),i)for(let n=0,a=i.length;n<a;n++){const r=i[n];ft.setFromBufferAttribute(r),this.morphTargetsRelative?(C.addVectors(N.min,ft.min),N.expandByPoint(C),C.addVectors(N.max,ft.max),N.expandByPoint(C)):(N.expandByPoint(ft.min),N.expandByPoint(ft.max))}N.getCenter(e);let s=0;for(let n=0,a=t.count;n<a;n++)C.fromBufferAttribute(t,n),s=Math.max(s,e.distanceToSquared(C));if(i)for(let n=0,a=i.length;n<a;n++){const r=i[n],l=this.morphTargetsRelative;for(let h=0,o=r.count;h<o;h++)C.fromBufferAttribute(r,h),l&&(lt.fromBufferAttribute(t,h),C.add(lt)),s=Math.max(s,e.distanceToSquared(C))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,i=this.attributes;if(t===null||i.position===void 0||i.normal===void 0||i.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const e=t.array,s=i.position.array,n=i.normal.array,a=i.uv.array,r=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ut(new Float32Array(4*r),4));const l=this.getAttribute("tangent").array,h=[],o=[];for(let b=0;b<r;b++)h[b]=new f,o[b]=new f;const u=new f,c=new f,d=new f,m=new D,p=new D,g=new D,x=new f,w=new f;function T(b,B,k){u.fromArray(s,b*3),c.fromArray(s,B*3),d.fromArray(s,k*3),m.fromArray(a,b*2),p.fromArray(a,B*2),g.fromArray(a,k*2),c.sub(u),d.sub(u),p.sub(m),g.sub(m);const E=1/(p.x*g.y-g.x*p.y);isFinite(E)&&(x.copy(c).multiplyScalar(g.y).addScaledVector(d,-p.y).multiplyScalar(E),w.copy(d).multiplyScalar(p.x).addScaledVector(c,-g.x).multiplyScalar(E),h[b].add(x),h[B].add(x),h[k].add(x),o[b].add(w),o[B].add(w),o[k].add(w))}let z=this.groups;z.length===0&&(z=[{start:0,count:e.length}]);for(let b=0,B=z.length;b<B;++b){const k=z[b],E=k.start,L=k.count;for(let R=E,X=E+L;R<X;R+=3)T(e[R+0],e[R+1],e[R+2])}const _=new f,S=new f,M=new f,Q=new f;function Z(b){M.fromArray(n,b*3),Q.copy(M);const B=h[b];_.copy(B),_.sub(M.multiplyScalar(M.dot(B))).normalize(),S.crossVectors(Q,B);const E=S.dot(o[b])<0?-1:1;l[b*4]=_.x,l[b*4+1]=_.y,l[b*4+2]=_.z,l[b*4+3]=E}for(let b=0,B=z.length;b<B;++b){const k=z[b],E=k.start,L=k.count;for(let R=E,X=E+L;R<X;R+=3)Z(e[R+0]),Z(e[R+1]),Z(e[R+2])}}computeVertexNormals(){const t=this.index,i=this.getAttribute("position");if(i!==void 0){let e=this.getAttribute("normal");if(e===void 0)e=new ut(new Float32Array(i.count*3),3),this.setAttribute("normal",e);else for(let c=0,d=e.count;c<d;c++)e.setXYZ(c,0,0,0);const s=new f,n=new f,a=new f,r=new f,l=new f,h=new f,o=new f,u=new f;if(t)for(let c=0,d=t.count;c<d;c+=3){const m=t.getX(c+0),p=t.getX(c+1),g=t.getX(c+2);s.fromBufferAttribute(i,m),n.fromBufferAttribute(i,p),a.fromBufferAttribute(i,g),o.subVectors(a,n),u.subVectors(s,n),o.cross(u),r.fromBufferAttribute(e,m),l.fromBufferAttribute(e,p),h.fromBufferAttribute(e,g),r.add(o),l.add(o),h.add(o),e.setXYZ(m,r.x,r.y,r.z),e.setXYZ(p,l.x,l.y,l.z),e.setXYZ(g,h.x,h.y,h.z)}else for(let c=0,d=i.count;c<d;c+=3)s.fromBufferAttribute(i,c+0),n.fromBufferAttribute(i,c+1),a.fromBufferAttribute(i,c+2),o.subVectors(a,n),u.subVectors(s,n),o.cross(u),e.setXYZ(c+0,o.x,o.y,o.z),e.setXYZ(c+1,o.x,o.y,o.z),e.setXYZ(c+2,o.x,o.y,o.z);this.normalizeNormals(),e.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const t=this.attributes.normal;for(let i=0,e=t.count;i<e;i++)C.fromBufferAttribute(t,i),C.normalize(),t.setXYZ(i,C.x,C.y,C.z)}toNonIndexed(){function t(r,l){const h=r.array,o=r.itemSize,u=r.normalized,c=new h.constructor(l.length*o);let d=0,m=0;for(let p=0,g=l.length;p<g;p++){r.isInterleavedBufferAttribute?d=l[p]*r.data.stride+r.offset:d=l[p]*o;for(let x=0;x<o;x++)c[m++]=h[d++]}return new ut(c,o,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const i=new ri,e=this.index.array,s=this.attributes;for(const r in s){const l=s[r],h=t(l,e);i.setAttribute(r,h)}const n=this.morphAttributes;for(const r in n){const l=[],h=n[r];for(let o=0,u=h.length;o<u;o++){const c=h[o],d=t(c,e);l.push(d)}i.morphAttributes[r]=l}i.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let r=0,l=a.length;r<l;r++){const h=a[r];i.addGroup(h.start,h.count,h.materialIndex)}return i}toJSON(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const h in l)l[h]!==void 0&&(t[h]=l[h]);return t}t.data={attributes:{}};const i=this.index;i!==null&&(t.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});const e=this.attributes;for(const l in e){const h=e[l];t.data.attributes[l]=h.toJSON(t.data)}const s={};let n=!1;for(const l in this.morphAttributes){const h=this.morphAttributes[l],o=[];for(let u=0,c=h.length;u<c;u++){const d=h[u];o.push(d.toJSON(t.data))}o.length>0&&(s[l]=o,n=!0)}n&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const r=this.boundingSphere;return r!==null&&(t.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const i={};this.name=t.name;const e=t.index;e!==null&&this.setIndex(e.clone(i));const s=t.attributes;for(const h in s){const o=s[h];this.setAttribute(h,o.clone(i))}const n=t.morphAttributes;for(const h in n){const o=[],u=n[h];for(let c=0,d=u.length;c<d;c++)o.push(u[c].clone(i));this.morphAttributes[h]=o}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let h=0,o=a.length;h<o;h++){const u=a[h];this.addGroup(u.start,u.count,u.materialIndex)}const r=t.boundingBox;r!==null&&(this.boundingBox=r.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}class te extends Hi{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ii,this.normalScale=new D(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:zi}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=zi);new ri;new te;function ie(y){let t,i,e;return{c(){t=yt("div"),i=yt("p"),e=ei("geometry viewer"),this.h()},l(s){t=xt(s,"DIV",{class:!0});var n=gt(t);i=xt(n,"P",{});var a=gt(i);e=si(a,"geometry viewer"),a.forEach(q),n.forEach(q),this.h()},h(){ni(t,"class","svelte-otwyd3")},m(s,n){wt(s,t,n),Mt(t,i),Mt(i,e)},p:W,i:W,o:W,d(s){s&&q(t)}}}class ee extends _t{constructor(t){super(),bt(this,t,null,ie,zt,{})}}function se(y){let t,i;return{c(){t=yt("h1"),i=ei("Geodesicraft")},l(e){t=xt(e,"H1",{});var s=gt(t);i=si(s,"Geodesicraft"),s.forEach(q)},m(e,s){wt(e,t,s),Mt(t,i)},p:W,i:W,o:W,d(e){e&&q(t)}}}class ne extends _t{constructor(t){super(),bt(this,t,null,se,zt,{})}}function re(y){let t;return{c(){t=ei("controls")},l(i){t=si(i,"controls")},m(i,e){wt(i,t,e)},p:W,i:W,o:W,d(i){i&&q(t)}}}class ae extends _t{constructor(t){super(),bt(this,t,null,re,zt,{})}}function he(y){let t,i,e,s,n;return i=new ne({}),s=new ae({}),{c(){t=yt("div"),Dt(i.$$.fragment),e=_i(),Dt(s.$$.fragment),this.h()},l(a){t=xt(a,"DIV",{class:!0});var r=gt(t);Pt(i.$$.fragment,r),e=bi(r),Pt(s.$$.fragment,r),r.forEach(q),this.h()},h(){ni(t,"class","svelte-120pvx2")},m(a,r){wt(a,t,r),Vt(i,t,null),Mt(t,e),Vt(s,t,null),n=!0},p:W,i(a){n||(Yt(i.$$.fragment,a),Yt(s.$$.fragment,a),n=!0)},o(a){Zt(i.$$.fragment,a),Zt(s.$$.fragment,a),n=!1},d(a){a&&q(t),Lt(i),Lt(s)}}}class oe extends _t{constructor(t){super(),bt(this,t,null,he,zt,{})}}function le(y){let t,i,e,s,n;return i=new oe({}),s=new ee({}),{c(){t=yt("div"),Dt(i.$$.fragment),e=_i(),Dt(s.$$.fragment),this.h()},l(a){t=xt(a,"DIV",{class:!0});var r=gt(t);Pt(i.$$.fragment,r),e=bi(r),Pt(s.$$.fragment,r),r.forEach(q),this.h()},h(){ni(t,"class","svelte-1bj4wec")},m(a,r){wt(a,t,r),Vt(i,t,null),Mt(t,e),Vt(s,t,null),n=!0},p:W,i(a){n||(Yt(i.$$.fragment,a),Yt(s.$$.fragment,a),n=!0)},o(a){Zt(i.$$.fragment,a),Zt(s.$$.fragment,a),n=!1},d(a){a&&q(t),Lt(i),Lt(s)}}}class ce extends _t{constructor(t){super(),bt(this,t,null,le,zt,{})}}export{ce as default};
